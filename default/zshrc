source /etc/profile

# Keep long command history
HISTSIZE=1000000
SAVEHIST=1000000
setopt APPEND_HISTORY

# Allow tab completion in the middle of a word.
setopt COMPLETE_IN_WORD

# Activate bash-style comments
setopt interactivecomments

########## Aliases

alias git="nocorrect git"
alias grep="grep --color=always"
alias fgrep="fgrep --color=always"
# export GREP_OPTIONS='--color=always'

case "$(uname -s)" in

    Darwin)
        # Do something under Mac OS X platform
        export PATH="$HOME/homebrew/bin:$HOME/homebrew/sbin:$PATH"
        export PYENCHANT_LIBRARY_PATH="$HOME/homebrew/lib/libenchant-2.dylib"
        ;;

    Linux)
        alias ls="ls --color=always"
        ;;

    *)
        # Do something under other platform
        ;;
esac

function sshtmux {
    ssh $1 -t 'tmux a || tmux new'
}

# alias sshserver="ssh $FB_HOST -t 'tmux a || tmux new'"
# alias sshfair="ssh -Y -C -t $FAIR_HOST -J $USERNAME@$JUMP_HOST -L 9090:$FAIR_HOST:9090 'tmux a || tmux new'"
# alias sshgpu="ssh $GPU_HOST -t 'tmux a || tmux new'"
# alias sshaws="ssh -Y -C -L 9090:${AIAWS}:9090 ${AIAWS} -t 'tmux a || tmux new'"

alias nbaws="jupyter notebook --no-browser --ip ${AIAWS} --port 9090"

# http://mperdikeas.github.io/networking.html.files/scp-a-file-through-jump-host.html
function downloadfair {
    scp -o "ProxyCommand ssh $USERNAME@$JUMP_HOST -W %h:%p" $USERNAME@$FAIR_HOST:$1 ./
}
function uploadfair {
    scp -o "ProxyCommand ssh $USERNAME@$JUMP_HOST -W %h:%p" $1 $USERNAME@$FAIR_HOST:/private/home/$USERNAME/
}

########## Configure editor

# Use vim keybinds
bindkey -v

# User-install bin
PATH="$HOME/bin":"$HOME/.local/bin":$PATH

if p=`command -v nvim`
then
    alias vi="$p"
    alias vim="$p"
    alias view="$p -R"
    alias vimdiff="$p -d"
    alias view="$p -R"
    export VISUAL="$p"
else
    export VISUAL="vim"
fi

alias v="$VISUAL"
export EDITOR="$VISUAL"
export GIT_EDITOR="$VISUAL"

########## Open new terminal in current directory in MacOS

if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]]; then
    function chpwd {
        printf '\e]7;%s\a' "file://$HOSTNAME${PWD// /%20}"
    }
    chpwd
fi

########### Load plugins

# source /etc/profile

# disable oh my zsh autoupdate
DISABLE_UPDATE_PROMPT=true
UPDATE_ZSH_DAYS=90

# load zgen
source "${HOME}/.zgen/zgen.zsh"

# if the init script doesn't exist
if ! zgen saved; then

    zgen oh-my-zsh
    zgen oh-my-zsh plugins/common-aliases

    # specify plugins here
    zgen load changs/slimzsh
    # antigen bundle zsh-users/zsh-completions
    # antigen bundle zsh-users/zsh-autosuggestions
    zgen load zsh-users/zsh-history-substring-search
    zgen load lukechilds/zsh-nvm

    # generate the init script from plugins above
    zgen save

    # update vim plugins
    vim +'PackClean --sync' +qa
    vim +'PackUpdate --sync' +qa

    # install tmux plugins if not already installed
    if { [ -n "$TMUX" ]; } then
        ~/.tmux/plugins/tpm/bin/install_plugins
        ~/.tmux/plugins/tpm/bin/update_plugins all	# prefix + U
    fi
fi

autoload zmv

########## Configure plugins

# Use vim keybinds
bindkey -v

# history substring search
# if { [ "$TERM" = "screen" ] && [ -n "$TMUX" ]; } then
# 	bindkey "$terminfo[kcuu1]" history-substring-search-up
# 	bindkey "$terminfo[kcud1]" history-substring-search-down
# fi

bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# Show stash
zstyle :prompt:pure:git:stash show yes

# Improve autocompletion style
zstyle ':completion:*' menu select  # select completions with arrow keys
zstyle ':completion:*' group-name ''  # group results by category
zstyle ':completion:::::' completer _expand _complete _ignored _approximate  # enable approximate matches for completion

# https://github.com/zdharma/fast-syntax-highlighting/issues/217
fast-theme q-jmnemonic &> /dev/null

# Fix "git add" autocomplete hanging
__git_files () {
    _wanted files expl 'local files' _files
}

# https://github.com/conda/conda/issues/6826#issuecomment-397287212
# if `command -v conda &> /dev/null`
# then
# 	[[ -z $TMUX ]] || conda deactivate; conda activate base
# fi

