" Load default Vim8 configuration
if has('vim')
	source $VIMRUNTIME/defaults.vim
endif

" NeoVim prefers ~/.local/share/nvim/plugged
call plug#begin('~/.vim/plugged')
	Plug 'tpope/vim-sensible'
	Plug 'thinca/vim-visualstar'
	Plug 'tmhedberg/SimpylFold'
	Plug 'cormacrelf/vim-colors-github'
	" Plug 'endel/vim-github-colorscheme'
	Plug 'ervandew/supertab'
	Plug 'AndrewRadev/linediff.vim'
	Plug 'tpope/vim-fugitive'
	Plug 'tpope/vim-surround'
	Plug 'airblade/vim-gitgutter'
	Plug 'lervag/vimtex'

	" Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }

	Plug 'desmap/ale-sensible' | Plug 'w0rp/ale'

	" Plug 'chiel92/vim-autoformat'
	" Plug 'vimjas/vim-python-pep8-indent'

call plug#end()

" Enable true color
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

colorscheme github

if has('vim')
	set mouse=r
endif

let g:ale_completion_enabled = 1
" let g:ale_lint_on_text_changed = 'never'
" let g:ale_set_highlights = 0
let g:ale_fixers = {
\ '*': ['remove_trailing_lines', 'trim_whitespace'],
\ 'python': ['remove_trailing_lines', 'trim_whitespace', 'reorder-python-imports', 'isort', 'black'],
\}
let g:ale_linters = {
\ 'python': ['flake8', 'pylint'],
\}

set smartindent

" Fold using indentation
au FileType python set foldmethod=indent
au FileType python set foldnestmax=1
au FileType python set foldminlines=10
" Open/close folds with space
au FileType python nnoremap <space> za

""""" Search while typing while ignoring case (when only lower case used)
set ignorecase
set smartcase
set incsearch

""""" Press escape to clear previous search highlight
" nnoremap <esc> :noh<return><esc>

" Automatically turn on/off paste mode when pasting to avoid stacking indentation

let &t_SI .= "\<Esc>[?2004h"
let &t_EI .= "\<Esc>[?2004l"

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

function! XTermPasteBegin()
        set pastetoggle=<Esc>[201~
        set paste
        return ""
endfunction
